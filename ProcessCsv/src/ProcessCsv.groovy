import org.apache.commons.csv.*

List columnNames = [ "Gender", "Age", "Office", "County", "01/03/2002",	"01/04/2002", "01/05/2002", 	"01/06/2002", 	"01/07/2002",	"01/08/2002",	"01/09/2002", "01/10/2002", "01/11/2002", "01/12/2002",
                    "01/01/2003",	"01/02/2003",	"01/03/2003",	"01/04/2003",	"01/05/2003",	"01/06/2003",	"01/07/2003",	"01/08/2003",	"01/09/2003",	"01/10/2003",	"01/11/2003",	"01/12/2003",
                    "01/01/2004",	"01/02/2004",	"01/03/2004",	"01/04/2004",	"01/05/2004",	"01/06/2004",	"01/07/2004",	"01/08/2004",	"01/09/2004",	"01/10/2004",	"01/11/2004",	"01/12/2004",
                    "01/01/2005",	"01/02/2005",	"01/03/2005",	"01/04/2005",	"01/05/2005",	"01/06/2005",	"01/07/2005",	"01/08/2005",	"01/09/2005",	"01/10/2005",	"01/11/2005",	"01/12/2005",
                    "01/01/2006",	"01/02/2006",	"01/03/2006",	"01/04/2006",	"01/05/2006",	"01/06/2006",	"01/07/2006",	"01/08/2006",	"01/09/2006",	"01/10/2006",	"01/11/2006",	"01/12/2006",
                    "01/01/2007",	"01/02/2007",	"01/03/2007",	"01/04/2007",	"01/05/2007",	"01/06/2007",	"01/07/2007",	"01/08/2007",	"01/09/2007",	"01/10/2007",	"01/11/2007",	"01/12/2007",
                     "01/01/2008",	"01/02/2008",	"01/03/2008",	"01/04/2008",	"01/05/2008",	"01/06/2008",	"01/07/2008",	"01/08/2008",	"01/09/2008",	"01/10/2008",	"01/11/2008",	"01/12/2008",
                     "01/01/2009",	"01/02/2009",	"01/03/2009",	"01/04/2009",	"01/05/2009",	"01/06/2009",	"01/07/2009",	"01/08/2009",	"01/09/2009",	"01/10/2009",	"01/11/2009",	"01/12/2009",
                    "01/01/2010",	"01/02/2010",	"01/03/2010",	"01/04/2010",	"01/05/2010",	"01/06/2010",	"01/07/2010",	"01/08/2010",	"01/09/2010",	"01/10/2010",	"01/11/2010",	"01/12/2010",
                    "01/01/2011",	"01/02/2011",	"01/03/2011",	"01/04/2011",	"01/05/2011",	"01/06/2011",	"01/07/2011",	"01/08/2011",	"01/09/2011",	"01/10/2011",	"01/11/2011",	"01/12/2011",
                    "01/01/2012",	"01/02/2012",	"01/03/2012",	"01/04/2012",	"01/05/2012",	"01/06/2012",	"01/07/2012",	"01/08/2012",	"01/09/2012",	"01/10/2012",	"01/11/2012",	"01/12/2012",
                    "01/01/2013",	"01/02/2013",	"01/03/2013",	"01/04/2013",	"01/05/2013",	"01/06/2013",	"01/07/2013",	"01/08/2013",	"01/09/2013",	"01/10/2013",	"01/11/2013",	"01/12/2013",
                    "01/01/2014",	"01/02/2014",	"01/03/2014",	"01/04/2014",	"01/05/2014",	"01/06/2014",	"01/07/2014",	"01/08/2014",	"01/09/2014",	"01/10/2014",	"01/11/2014",	"01/12/2014",
                    "01/01/2015",	"01/02/2015",	"01/03/2015",	"01/04/2015",	"01/05/2015",	"01/06/2015",	"01/07/2015",	"01/08/2015",	"01/09/2015",	"01/10/2015",	"01/11/2015",	"01/12/2015",
                    "01/01/2016",	"01/02/2016",	"01/03/2016",	"01/04/2016",	"01/05/2016",	"01/06/2016",	"01/07/2016",	"01/08/2016",	"01/09/2016" ]


// specifying the source file
FileReader sourceFile = new FileReader("TestBook.csv");
BufferedReader  csvReader = new BufferedReader(sourceFile)

// parse the csv file to memory
CSVParser csv = new CSVParser(csvReader, CSVFormat.EXCEL.withHeader())

// For writing to the file
FileWriter fileWriter = new FileWriter(new File("testoutput.csv"))
CSVPrinter csvPrinter = new CSVPrinter(fileWriter, CSVFormat.DEFAULT.withRecordSeparator("\n"))


for (record in csv) {
    for (int i = 4; i < columnNames.size(); i++){
        Record r = new Record(record[0], record[1], record[2], record[3], columnNames.getAt(i), record[i])
        csvPrinter.print(r.gender)
        csvPrinter.print(r.age)
        csvPrinter.print(r.office)
        csvPrinter.print(r.county)
        csvPrinter.print(r.date)
        csvPrinter.print(r.figure)
        csvPrinter.println()
    }
}

try {
    fileWriter.flush();
    fileWriter.close();
    csvPrinter.close();
} catch (IOException e) {
    System.out.println("Error while flushing/closing fileWriter/csvPrinter !!!");
    e.printStackTrace();
}

public class Record{
    def gender
    def age
    def office
    def county
    def date
    def figure

    public Record(gender, age, office, county, date, figure) {
        this.gender = gender
        this.age = age
        this.office = office
        this.county = county
        this.date = date
        this.figure = figure
    }
}
